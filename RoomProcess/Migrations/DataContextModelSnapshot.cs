// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomProcess.Data;

#nullable disable

namespace RoomProcess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RoomProcess.Models.Entities.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.HasKey("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Objekat", b =>
                {
                    b.Property<int>("ObjekatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ObjekatId"), 1L, 1);

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("Naknade")
                        .HasColumnType("int");

                    b.Property<string>("ObjekatNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PopustId")
                        .HasColumnType("int");

                    b.Property<int>("TipObjektaId")
                        .HasColumnType("int");

                    b.HasKey("ObjekatId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PopustId");

                    b.HasIndex("TipObjektaId");

                    b.ToTable("Objekat");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Oprema", b =>
                {
                    b.Property<int>("OpremaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OpremaId"), 1L, 1);

                    b.Property<int>("ObjekatId")
                        .HasColumnType("int");

                    b.Property<string>("OpremaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OpremaId");

                    b.HasIndex("ObjekatId");

                    b.ToTable("Oprema");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Popust", b =>
                {
                    b.Property<int>("PopustId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PopustId"), 1L, 1);

                    b.Property<int>("PopustIznos")
                        .HasColumnType("int");

                    b.Property<string>("PopustNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PopustId");

                    b.ToTable("Popust");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Recenzija", b =>
                {
                    b.Property<int>("RecenzijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecenzijaId"), 1L, 1);

                    b.Property<int>("CenaKvalitet")
                        .HasColumnType("int");

                    b.Property<int>("Cistoca")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("Lokacija")
                        .HasColumnType("int");

                    b.Property<int>("Ocena")
                        .HasColumnType("int");

                    b.Property<int>("Osoblje")
                        .HasColumnType("int");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<int>("Sadrzaj")
                        .HasColumnType("int");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RecenzijaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Recenzija");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RezervacijaId"), 1L, 1);

                    b.Property<int>("BrojNocenja")
                        .HasColumnType("int");

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumDolaska")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumOdlaska")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("ObjekatId")
                        .HasColumnType("int");

                    b.Property<bool>("Potvrda")
                        .HasColumnType("bit");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("ObjekatId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Slika", b =>
                {
                    b.Property<int>("SlikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SlikaId"), 1L, 1);

                    b.Property<int>("ObjekatId")
                        .HasColumnType("int");

                    b.Property<string>("UrlSlike")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SlikaId");

                    b.HasIndex("ObjekatId");

                    b.ToTable("Slika");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.TipObjekta", b =>
                {
                    b.Property<int>("TipObjektaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipObjektaId"), 1L, 1);

                    b.Property<string>("TipObjektaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipObjektaId");

                    b.ToTable("TipObjekta");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UlogaId"), 1L, 1);

                    b.Property<string>("UlogaNaziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Korisnik", b =>
                {
                    b.HasOne("RoomProcess.Models.Entities.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Objekat", b =>
                {
                    b.HasOne("RoomProcess.Models.Entities.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomProcess.Models.Entities.Popust", "Popust")
                        .WithMany()
                        .HasForeignKey("PopustId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomProcess.Models.Entities.TipObjekta", "TipObjekta")
                        .WithMany()
                        .HasForeignKey("TipObjektaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Popust");

                    b.Navigation("TipObjekta");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Oprema", b =>
                {
                    b.HasOne("RoomProcess.Models.Entities.Objekat", "Objekat")
                        .WithMany()
                        .HasForeignKey("ObjekatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objekat");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Recenzija", b =>
                {
                    b.HasOne("RoomProcess.Models.Entities.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomProcess.Models.Entities.Rezervacija", "Rezervacija")
                        .WithMany()
                        .HasForeignKey("RezervacijaId");

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Rezervacija", b =>
                {
                    b.HasOne("RoomProcess.Models.Entities.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RoomProcess.Models.Entities.Objekat", "Objekat")
                        .WithMany()
                        .HasForeignKey("ObjekatId");

                    b.Navigation("Korisnik");

                    b.Navigation("Objekat");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Slika", b =>
                {
                    b.HasOne("RoomProcess.Models.Entities.Objekat", "Objekat")
                        .WithMany("Slike")
                        .HasForeignKey("ObjekatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objekat");
                });

            modelBuilder.Entity("RoomProcess.Models.Entities.Objekat", b =>
                {
                    b.Navigation("Slike");
                });
#pragma warning restore 612, 618
        }
    }
}
